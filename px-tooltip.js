
!function () { var t = function (t) { return t.replace(/[-_]+/g, " ").replace(/[^\w\s]/g, "").replace(/ (.)/g, function (t) { return t.toUpperCase() }).replace(/ /g, "") }, e = function (t) { return /^\d+$/.test(t) ? parseInt(t) : /^\d*\.\d+$/.test(t) ? parseFloat(t) : !!/^true$/.test(t) || !/^false$/.test(t) && t }, n = function (n) { var i = {}, r = n.attributes; for (var a in r) if (/^data-/.test(r[a].name)) { var o = r[a].name.replace(/^data-/, ""); i[t(o)] = e(r[a].value) } return i }, i = function (t, e, i) { var r = this; return r.source = $(t), r.id = r.source.attr("id") || null, r.settings = $.extend({}, i, n(r.source[0]), e), r.references = null !== r.id ? $('[href="#' + r.id + '"],[data-bind="#' + r.id + '"]') : $(), r.roles = {}, r.references.filter("[data-role]").each(function () { for (var t = $(this).data("role").split("|"), e = 0; e < t.length; e++)r.roles.hasOwnProperty(t[e]) || (r.roles[t[e]] = $()), r.roles[t[e]] = r.roles[t[e]].add(this) }), this }; i.init = function (e, n) { var i = [], r = this; return $(e).each(function () { var e = new r(this, n || {}), a = null !== e.id ? t(e.id) : Object.keys(r.instances).length.toString(); r.instances[a] = e, i.push(e) }), i.length > 1 ? i : i[0] }; var r = function (t, e) { if ("function" == typeof t) { var n = function (n, r) { return i.call(this, n, r || {}, e || {}), t.call(this, n, r), this }; n.prototype = t.prototype, n.prototype.constructor = n, n.init = i.init, n.instances = {}, n.defaults = e || {}; var r = function (t) { return n.init.call(n, this, t) }; return r.init = function (t, e) { return n.init.call(n, t, e) }, r.instances = n.instances, r.defaults = n.defaults, r } throw "'Boost JS' requires a function as first paramater." }; r.auto = function () { var e = []; $("[data-init]").each(function () { var n = $(this).data("init"), i = t(n); e.indexOf(i) === -1 && "undefined" != typeof $.fn[i] && ($('[data-init="' + n + '"],[data-init="' + i + '"]')[i](), e.push(i)) }) }, r.version = "0.5.0", "function" == typeof require && "object" == typeof exports && "object" == typeof module ? module.exports = r : "undefined" != typeof window && "undefined" != typeof window.$ && (window.$.fn.boost = r) }();
!function () { function t() { return ("0000" + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4) } var i = function () { var i = this; i.title = i.source.attr("title"), i.source[0].removeAttribute("title"), i.tip = $(document.createElement("div")).html(i.title).addClass(i.settings.tipClass).addClass(i.settings.tipClass + "-" + i.settings.placement).attr("id", "tooltip-" + (null !== i.id ? i.id : t())).css("position", "absolute").attr("aria-hidden", "true"), i.source.attr("aria-labelledby", i.tip[0].id).on("focus", function () { i.show() }).on("blur", function () { i.hide() }).on("mouseover", function () { i.show() }).on("mouseout", function () { document.activeElement !== i.source[0] && i.hide() }), document.body.appendChild(i.tip[0]), $.isFunction(i.settings.onInit) && i.settings.onInit.call(i) }; i.prototype = { show: function (t) { var i = this; return i.isVisible() || (i.setPosition(), i.tip.attr("aria-hidden", "false").addClass(i.settings.activeClass), $.isFunction(t) && t.call(i), $.isFunction(i.settings.onShow) && i.settings.onShow.call(i)), i }, hide: function (t) { var i = this; return i.isVisible() && (i.tip.attr("aria-hidden", "true").removeClass(i.settings.activeClass), $.isFunction(t) && t.call(i), $.isFunction(i.settings.onHide) && i.settings.onHide.call(i)), i }, isVisible: function () { return document.body.contains(this.tip[0]) && this.tip.hasClass(this.settings.activeClass) }, setPosition: function () { var t = this, i = t.source[0].getBoundingClientRect(), e = t.tip[0].getBoundingClientRect(); return "right" == t.settings.placement && (t.tip.css("top", i.height / 2 - e.height / 2 + i.top), t.tip.css("left", i.right + t.settings.margin)), "left" == t.settings.placement && (t.tip.css("top", i.height / 2 - e.height / 2 + i.top), t.tip.css("left", i.left - t.settings.margin - e.width)), "top" == t.settings.placement && (t.tip.css("top", i.top - e.height - t.settings.margin), t.tip.css("left", i.left + i.width / 2 - e.width / 2)), "bottom" == t.settings.placement && (t.tip.css("top", i.bottom + t.settings.margin), t.tip.css("left", i.left + i.width / 2 - e.width / 2)), t } }; var e = { plugin: i, defaults: { tipClass: "tooltip", activeClass: "is-visible", placement: "top", margin: 10, onInit: null, onShow: null, onHide: null } }; "function" == typeof require && "object" == typeof exports && "object" == typeof module ? module.exports = e : "undefined" != typeof window && "undefined" != typeof window.$ && "undefined" != typeof window.$.fn.boost && (window.$.fn.boost.tooltip = e) }();

$.fn.tooltip = window.$.fn.boost(window.$.fn.boost.tooltip.plugin, window.$.fn.boost.tooltip.defaults);

setTimeout(() => {
    $('[data-tooltip]').tooltip();
}, 1500);

